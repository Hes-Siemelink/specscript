Test case: String type

Check type:
  item: Hes
  type: string

---
Test case: Object type

Check type:
  item:
    name: Hes
  type: object

---
Test case: Array type

Check type:
  item:
    - name: Hes
  type: array

---
Test case: Not a string

Check type:
  item:
    - Hes
  type: string

Expected error:
  Type validation: Provided data is an array, not a string

---
Test case: Not an object

Check type:
  item: Hes
  type: object

Expected error:
  Type validation: Provided data is string, not an object

---
Test case: Not an array

Check type:
  item:
    name: Hes
  type: array

Expected error:
  Type validation: Provided data is an object, not an array

---
Test case: Object properties

Check type:
  item:
    name: Hes
  type:
    base: object
    properties:
      name: string

---
Test case: Implicit object definition

Check type:
  item:
    name: Hes
  type:
    properties:
      name: string

---
Test case: Invalid object property

Check type:
  item:
    name: Hes
  type:
    base: object
    properties:
      name: object

Expected error:
  Type validation: Validation should fail because name is a string, not an object

---
Test case: Define a list

Check type:
  item:
    - name: Alice
    - name: Bob
  type:
    base: array
    list of: Person

---
Test case: Faulty object

Check type:
  item:
    name-x: Alice
  type: Person

Expected error:
  Type validation: Validation should fail because the property name is expected in the Person type

---
Test case: Optional property

Check type:
  item:
    name-x: Alice
  type:
    base: object
    properties:
      name:
        type: string
        optional: true

---
Test case: Faulty list

Check type:
  item:
    - name-x: Alice
  type:
    base: array
    list of: Person

Expected error:
  Type validation: Validation should fail because the property name is expected in the Person type

---
Test case: Recursive object

Check type:
  item:
    name: Alice
    child:
      name: Bob
      child:
        name: Charlie
  type: Recursive Type
